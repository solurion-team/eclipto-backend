openapi: 3.0.3
info:
  title: Project microservice
  description: Api specification for project microservice
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Local debug server
paths:
  /v1/projects/{projectId}:
    get:
      description: Get full project info
      operationId: getProjectInfo
      tags:
        - project
      security:
        - bearerHttpAuthentication: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        200:
          description: "The project has been found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInfoDto"
        403:
          description: "Project not found"
          content:
            application/json:
              schema:
                $ref: "../common/openapi.yaml#/components/schemas/ErrorDto"
        default:
          $ref: "../common/openapi.yaml#/components/responses/UnexpectedErrorResponse"
    put:
      description: Update project infor
      operationId: updateProjectInfo
      tags:
        - project
      security:
        - bearerHttpAuthentication: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      requestBody:
        $ref: "#/components/requestBodies/UpdateProjectInfoRequestBody"
      responses:
        200:
          description: "Project info updated successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInfoDto"
        403:
          description: "There is no project with same ID"
          content:
            application/json:
              schema:
                $ref: "../common/openapi.yaml#/components/schemas/ErrorDto"
        default:
          $ref: "../common/openapi.yaml#/components/responses/UnexpectedErrorResponse"
    delete:
      description: Permanently delete project
      operationId: deleteProject
      tags:
        - project
      security:
        - bearerHttpAuthentication: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        204:
          description: "The project has been deleted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInfoDto"
        403:
          description: "Project not found"
          content:
            application/json:
              schema:
                $ref: "../common/openapi.yaml#/components/schemas/ErrorDto"
        default:
          $ref: "../common/openapi.yaml#/components/responses/UnexpectedErrorResponse"
  /v1/projects:
    get:
      description: Get all user project (or all workspace`s project)
      operationId: getProjects
      tags:
        - project
      security:
        - bearerHttpAuthentication: [ ]
      parameters:
        - $ref: "#/components/parameters/QueryWorkspaceId"
      responses:
        200:
          description: "The project has been found"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectInfoDto"
        403:
          description: "Project not found"
          content:
            application/json:
              schema:
                $ref: "../common/openapi.yaml#/components/schemas/ErrorDto"
        default:
          $ref: "../common/openapi.yaml#/components/responses/UnexpectedErrorResponse"
    post:
      description: Create project with required information
      operationId: postProject
      tags:
        - project
      security:
        - bearerHttpAuthentication: [ ]
      requestBody:
        $ref: "#/components/requestBodies/CreateProjectRequestBody"
      responses:
        200:
          description: "Project created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInfoDto"
        default:
          $ref: "../common/openapi.yaml#/components/responses/UnexpectedErrorResponse"

components:
  securitySchemes:
    bearerHttpAuthentication:
      description: Bearer token using a JWT
      type: http
      scheme: Bearer
      bearerFormat: JWT

  parameters:
    ProjectId:
      name: projectId
      in: path
      description: ID of a project
      required: true
      schema:
        type: integer
        format: int64
        example: "3746287468"
    PathWorkspaceId:
      name: workspaceId
      in: path
      description: ID of a workspace
      required: true
      schema:
        type: integer
        format: int64
        example: "3746287468"
    QueryWorkspaceId:
      name: workspaceId
      in: query
      description: ID of a workspace
      required: false
      schema:
        type: integer
        format: int64
        example: "3746287468"

  requestBodies:
    CreateProjectRequestBody:
      description: Request to create a project
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateProjectRequest"
    UpdateProjectInfoRequestBody:
      description: Request to update a project
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateProjectRequest"

  schemas:
    ProjectInfoDto:
      description: Project information
      type: object
      properties:
        id:
          description: "ID of the project"
          type: integer
          format: int64
          example: 7438546582
        name:
          description: "Project name, which identifies the project to the user"
          type: string
          example: "eclipto-backend"
        description:
          description: "A project description that provides more detailed information about the project"
          type: string
          example: "Project about microservice based eclipto backend project, that implement api-gateway pattern and ..."
        tint:
          description: "A color that is convenient for the user to identify the project"
          type: string
          pattern: "^#(?:[0-9a-fA-F]{3}){1,2}$"
        lead_id:
          description: "Project lead user id"
          type: integer
          format: int64
          example: "3757385734"
      required:
        - id
        - name
        - lead_id
    CreateProjectRequest:
      description: Request schema to create a project
      properties:
        name:
          description: "Project name, which identifies the project to the user"
          type: string
          example: "eclipto-backend"
        description:
          description: "A project description that provides more detailed information about the project"
          type: string
          example: "Project about microservice based eclipto backend project, that implement api-gateway pattern and ..."
        tint:
          description: "A color that is convenient for the user to identify the project"
          type: string
          pattern: "^#(?:[0-9a-fA-F]{3}){1,2}$"
        workspace_id:
          description: "Project workspace id"
          type: integer
          format: int64
          example: "3757385734"
        lead_id:
          description: "Project lead user id"
          type: integer
          format: int64
          example: "3757385734"
      required:
        - name
        - lead_id
    UpdateProjectRequest:
      description: Request schema to update a project
      properties:
        name:
          description: "Project name, which identifies the project to the user"
          type: string
          example: "eclipto-backend"
        description:
          description: "A project description that provides more detailed information about the project"
          type: string
          example: "Project about microservice based eclipto backend project, that implement api-gateway pattern and ..."
        tint:
          description: "A color that is convenient for the user to identify the project"
          type: string
          pattern: "^#(?:[0-9a-fA-F]{3}){1,2}$"
        lead_id:
          description: "Project lead user id"
          type: integer
          format: int64
          example: "3757385734"

